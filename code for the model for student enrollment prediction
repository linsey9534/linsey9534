import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix

# Assuming the given dataset is stored in a csv file called 'dataset.csv'
df = pd.read_csv('dataset.csv')

# Preprocess the data
df = df.dropna()

# Map the gender to numerical values
df['gender'] = df['gender'].map({'Male': 1, 'Female': 0})

# One-hot encode the categorical features
df = pd.get_dummies(df, columns=['ethnicity'])

# Define the features (X) and the target variable (y)
X = df.drop('enrolled' , axis=1)
y = df['enrolled']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Random Forest Classifier model
model = RandomForestClassifier(n_estimators=100, random_state=42)

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Print the confusion matrix and the classification report
print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))
